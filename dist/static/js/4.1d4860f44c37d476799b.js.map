{"version":3,"sources":["webpack:///src/pages/gis-weather-map.vue","webpack:///./src/pages/gis-weather-map.vue?37ba","webpack:///./src/pages/gis-weather-map.vue","webpack:///./node_modules/leaflet-velocity/dist/leaflet-velocity.js"],"names":["gis_weather_map","name","data","map","layerControl","velocityLayer","weather","loading","marker","mounted","this","initmap","addvelocity","firstmessage","methods","that","EsriWorldImagery","leaflet_src_default","a","tileLayer","attribution","EsriDarkGreyCanvas","normalm1","chinaProvider","normalm3","normalm4","normalm5","normalm","normala","imgm","imga","normal","layerGroup","image","normalMap","satelliteMap","Gaode","Gaodimgem","Gaodimga","OpenStreetMap","MapBox","baseLayers","Esri卫星图","Esri-灰白","智图地图","智图午夜蓝","智图灰色","智图暖色","天地图","天地图影像","谷歌地图","谷歌影像","高德地图","高德影像","center","zoom","layers","zoomControl","control","addTo","zoomInTitle","zoomOutTitle","Object","AMap","then","console","log","e","on","openFullScreen2","content","latlng","toString","searchapi","lng","lat","axios_default","get","response","locadcode","pois","adcode","weatherget","forecasts","casts","responselive","liveweather","lives","weatherinfo","city","province","reporttime","temperature","windpower","winddirection","humidity","i","date","nightweather","dayweather","nighttemp","daytemp","daypower","daywind","popup","setLatLng","setContent","openOn","closeFullScreen2","catch","error","$message","message","type","closeFullScreen2error","$loading","lock","text","spinner","background","setTimeout","close","$http","displayValues","displayOptions","velocityType","displayPosition","displayEmptyString","maxVelocity","velocityScale","onAdd","onRemove","addOverlay","_this","$confirm","confirmButtonText","cancelButtonText","dangerouslyUseHTMLString","$router","push","path","pages_gis_weather_map","render","_h","$createElement","_self","_c","staticStyle","margin","width","height","attrs","id","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","L","DomUtil","setTransform","el","offset","scale","pos","Point","style","TRANSFORM","Browser","ie3d","x","y","CanvasLayer","Layer","Class","extend","initialize","options","_map","_canvas","_frame","_delegate","setOptions","delegate","del","needRedraw","Util","requestAnimFrame","drawLayer","_onLayerDidResize","resizeEvent","newSize","_onLayerDidMove","topLeft","containerPointToLayerPoint","setPosition","getEvents","events","resize","moveend","zoomAnimation","any3d","zoomanim","_animateZoom","create","tiles","size","getSize","animated","addClass","_panes","overlayPane","appendChild","onLayerDidMount","self","onLayerWillUnmount","getPanes","removeChild","off","addLayer","LatLonToMercator","latlon","Math","PI","tan","bounds","getBounds","getZoom","getCenter","corner","containerPointToLatLng","onDrawLayer","layer","canvas","_setTransform","getZoomScale","_latLngToNewLayerPoint","getNorthWest","_getCenterOffset","_multiplyBy","subtract","_getMapPanePos","canvasLayer","Control","Velocity","position","emptyString","angleConvention","speedUnit","_container","DomEvent","disableClickPropagation","_onMouseMove","innerHTML","leafletVelocity","vectorToSpeed","uMs","vMs","unit","velocityAbs","sqrt","pow","meterSec2kilometerHour","meterSec2Knots","vectorToDegrees","endsWith","abs","velocityDirToDegrees","atan2","meters","point","containerPoint","gridValue","_windy","interpolatePoint","htmlOut","isNaN","toFixed","Map","mergeOptions","positionControl","addInitHook","MousePosition","addControl","velocity","VelocityLayer","colorScale","_canvasLayer","_context","_timer","_mouseControl","_destroyWind","setData","_clearAndRestart","fire","overlay","params","clearTimeout","_startWindy","_initWindy","start","_southWest","_northEast","assign","Windy","getContext","classList","add","stop","_clearWind","_initMouseHandler","clearRect","removeControl","removeLayer","builder","grid","λ0","φ0","Δλ","Δφ","ni","nj","animationLoop","MIN_VELOCITY_INTENSITY","minVelocity","MAX_VELOCITY_INTENSITY","VELOCITY_SCALE","window","devicePixelRatio","MAX_PARTICLE_AGE","particleAge","PARTICLE_LINE_WIDTH","lineWidth","PARTICLE_MULTIPLIER","particleMultiplier","PARTICLE_REDUCTION","FRAME_TIME","frameRate","NULL_WIND_VECTOR","NaN","gridData","bilinearInterpolateVector","g00","g10","g01","g11","rx","ry","b","c","d","u","v","createBuilder","uComp","vComp","forEach","record","header","parameterCategory","parameterNumber","uData","vData","interpolate","createWindBuilder","λ","φ","row","floorMod","j","fi","floor","ci","fj","cj","isValue","undefined","n","distort","projection","wind","windy","distortion","τ","H","hλ","hφ","pλ","project","pφ","k","cos","createField","columns","callback","field","column","round","release","randomize","o","safetyNet","random","deg2rad","deg","rad2deg","ang","invert","mapLonDelta","east","west","worldMapRadius","mapOffsetY","sin","south","atan","exp","mercY","lon","ymin","ymax","north","xFactor","yFactor","animate","min","max","colorStyles","indexFor","m","length","buckets","particleCount","test","navigator","userAgent","particles","age","g","fillStyle","globalAlpha","Date","now","frame","requestAnimationFrame","delta","bucket","particle","xt","yt","globalCompositeOperation","fillRect","beginPath","strokeStyle","moveTo","lineTo","stroke","cancelAnimationFrame","extent","mapBounds","lo1","la1","dx","dy","nx","ny","refTime","setHours","getHours","forecastTime","p","isContinuous","buildGrid","mapArea","interpolateColumn","yMax","coord","isFinite","batchInterpolate","interpolateField","upperLeft","lowerRight","ceil","xMax","buildBounds"],"mappings":"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","file":"static/js/4.1d4860f44c37d476799b.js","sourcesContent":["<template>\n  <div id=\"map\" style=\"margin:0 auto;width: 100%;height: 100%\"></div>\n</template>\n\n<script>\n  import 'leaflet-velocity'\n  import {chinaProvider} from 'leaflet.chinatmsproviders'\n  import L from 'leaflet'\n  import MapLoader from '../../src/assets/js/AMap.js'\n  import axios from 'axios'\n  export default {\n    name: 'gis-weather-map',\n    data () {\n      return {\n        map: null,\n        layerControl: null,\n        velocityLayer: null,\n        weather: null,\n        loading: null,\n        marker: null\n      }\n    },\n    mounted () {\n      this.initmap()\n      this.addvelocity()\n      this.firstmessage()\n    },\n    methods: {\n      initmap: function () {\n        let that = this\n        /**\n         * Esri地图\n         */\n        let EsriWorldImagery = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\n          attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, ' +\n            'AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n        })\n\n        let EsriDarkGreyCanvas = L.tileLayer(\n          'http://{s}.sm.mapstack.stamen.com/' +\n          '(toner-lite,$fff[difference],$fff[@23],$fff[hsl-saturation@20])/' +\n          '{z}/{x}/{y}.png',\n          {\n            attribution: 'Tiles &copy; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, ' +\n              'NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong)'\n          }\n        )\n        /**\n         * 智图地图内容\n         */\n        let normalm1 = L.tileLayer.chinaProvider('Geoq.Normal.Map', {\n          attribution: 'Haut-Gis-Org © 智图地图'\n        })\n        let normalm2 = L.tileLayer.chinaProvider('Geoq.Normal.Color', {\n          attribution: 'Haut-Gis-Org © 智图地图'\n        })\n        let normalm3 = L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue', {\n          attribution: 'Haut-Gis-Org © 智图地图'\n        })\n        let normalm4 = L.tileLayer.chinaProvider('Geoq.Normal.Gray', {\n          attribution: 'Haut-Gis-Org © 智图地图'\n        })\n        let normalm5 = L.tileLayer.chinaProvider('Geoq.Normal.Warm', {\n          attribution: 'Haut-Gis-Org © 智图地图'\n        })\n        let normalm6 = L.tileLayer.chinaProvider('Geoq.Normal.Cold', {\n          attribution: 'Haut-Gis-Org © 智图地图'\n        })\n        /**\n         * 天地图内容\n         */\n        let normalm = L.tileLayer.chinaProvider('TianDiTu.Normal.Map', {\n          attribution: 'Haut-Gis-Org © 天地图'\n        })\n        let normala = L.tileLayer.chinaProvider('TianDiTu.Normal.Annotion', {\n          attribution: 'Haut-Gis-Org © 天地图'\n        })\n        let imgm = L.tileLayer.chinaProvider('TianDiTu.Satellite.Map', {\n          attribution: 'Haut-Gis-Org © 天地图'\n        })\n        let imga = L.tileLayer.chinaProvider('TianDiTu.Satellite.Annotion', {\n          attribution: 'Haut-Gis-Org © 天地图'\n        })\n        let normal = L.layerGroup([normalm, normala])\n        let image = L.layerGroup([imgm, imga])\n        /**\n         * 谷歌\n         */\n        let normalMap = L.tileLayer.chinaProvider('Google.Normal.Map', {\n          attribution: 'Haut-Gis-Org © Google Map'\n        })\n        let satelliteMap = L.tileLayer.chinaProvider('Google.Satellite.Map', {\n          attribution: 'Haut-Gis-Org © Google Map'\n        })\n        /**\n         * 高德地图\n         */\n        let Gaode = L.tileLayer.chinaProvider('GaoDe.Normal.Map', {\n          attribution: 'Haut-Gis-Org © AMap'\n        })\n        let Gaodimgem = L.tileLayer.chinaProvider('GaoDe.Satellite.Map', {\n          attribution: 'Haut-Gis-Org © AMap'\n        })\n        let Gaodimga = L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion', {\n          attribution: 'Haut-Gis-Org © AMap'\n        })\n        let OpenStreetMap = L.tileLayer(\n          'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: 'Haut-Gis-Org © OpenStreetMap'\n          }\n        )\n        let MapBox =\n          L.tileLayer(\n            'https://api.mapbox.com/styles/v1/kengqiangxia/cj5jbah540hlj2rpgh3xptiek/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1Ijoia2VuZ3FpYW5neGlhIiwiYSI6ImNqNWpiMWZ5ZTIxYzgyd3BrYTN2NDN5aXEifQ.bqY03lR_2LZ0fttPOJ4jyw', {\n              attribution: 'Haut-Gis-Org © <a href=\"http://mapbox.com\">Mapbox</a>'\n            })\n        let Gaodimage = L.layerGroup([Gaodimgem, Gaodimga])\n        let baseLayers = {\n          'Esri卫星图': EsriWorldImagery,\n          'Esri-灰白': EsriDarkGreyCanvas,\n          '智图地图': normalm1,\n          '智图午夜蓝': normalm3,\n          '智图灰色': normalm4,\n          '智图暖色': normalm5,\n          '天地图': normal,\n          '天地图影像': image,\n          '谷歌地图': normalMap,\n          '谷歌影像': satelliteMap,\n          '高德地图': Gaode,\n          '高德影像': Gaodimage,\n          'OpenStreetMap': OpenStreetMap,\n          'MapBox': MapBox\n        }\n        let overLayers = {\n        }\n        this.map = L.map('map', {\n          center: [43.912301, 125.323877],\n          zoom: 4,\n          layers: [EsriDarkGreyCanvas],\n          zoomControl: false\n        })\n\n        that.layerControl = L.control.layers(baseLayers, overLayers)\n        that.layerControl.addTo(this.map)\n        L.control.zoom({\n          zoomInTitle: '放大',\n          zoomOutTitle: '缩小'\n        }).addTo(this.map)\n        // this.baseLayer.addTo(this.map)\n        // L.control.scale({ maxWidth: 200, metric: true, imperial: false }).addTo(this.map)\n        // use event\n\n        // 加载高德地图\n        MapLoader().then(AMap => {\n          console.log('地图加载成功')\n          // this.map = new AMap.Map('container', {\n          //   resizeEnable: true,\n          //   center: [125.323877, 43.912301],\n          //   zoom: 12,\n          //   isHotspot: true\n          // })\n        }, e => {\n          console.log('地图加载失败', e)\n        })\n\n        this.map.on('click', function (e) {\n          that.openFullScreen2() // 打开加载中\n          let content = '你临幸了这个点：'\n          content += e.latlng.toString()\n          console.log(content)\n          // 调用高德api获取当前位置adcode\n          let searchapi = '/amapapi/v3/place/around?key=d019e2f0225bc0ec9ee2160602987a24&location=' +\n          e.latlng.lng +\n          ',' +\n          e.latlng.lat +\n          '&keywords=&types=&radius=&offset=&page=&extensions=all'\n          axios\n            .get(searchapi)\n            .then(response => {\n              // 获取到adcode\n              let locadcode = response.pois[0].adcode\n              let weatherget = '/amapapi/v3/weather/weatherInfo?key=d019e2f0225bc0ec9ee2160602987a24&extensions=all&city=' + locadcode\n              axios\n                .get(weatherget)\n                .then(response => {\n                  // 获取到adcode\n                  console.log(response)\n                  let data = response.forecasts[0]\n                  let weather = data.casts\n                  axios\n                    .get('/amapapi/v3/weather/weatherInfo?key=d019e2f0225bc0ec9ee2160602987a24&extensions=base&city=' + locadcode)\n                    .then(responselive => {\n                      console.log(responselive)\n                      let liveweather = responselive.lives[0]\n                      let weatherinfo = '城市/区：' + data.city + '</br>' +\n                        '归属：' + data.province + '省' + '</br>' +\n                        '实时天气' + '</br>' +\n                        '更新时间：' + liveweather.reporttime + '</br>' +\n                        '天气' + liveweather.weather + '</br>' +\n                        '温度：' + liveweather.temperature + '℃' + '</br>' +\n                        '风力：' + liveweather.windpower + '</br>' +\n                        '风向：' + liveweather.winddirection + '</br>' +\n                        '湿度：' + liveweather.humidity + '</br>' + '</br>' +\n                        '天气预报' + '</br>' +\n                        '<table border=\"1\">' +\n                        '<tr>' +\n                        '<td>日期</td>' +\n                        '<td>天气</td>' +\n                        '<td>温度</td>' +\n                        '<td>风力</td>' +\n                        '<td>风向</td>' +\n                        '</tr>'\n                      for (let i = 1; i < 4; i++) {\n                        weatherinfo += '<tr>' +\n                          '<td>' + weather[i].date + '</td>' +\n                          '<td>' + weather[i].nightweather + '转' + weather[i].dayweather + '</td>' +\n                          '<td>' + weather[i].nighttemp + '～' + weather[i].daytemp + '℃' + '</td>' +\n                          '<td>' + weather[i].daypower + '</td>' +\n                          '<td>' + weather[i].daywind + '</td>' +\n                          '</tr>'\n                      }\n                      weatherinfo += '</table>'\n                      // console.log(nowweather)\n                      var popup = L.popup()\n                        .setLatLng(e.latlng)\n                        .setContent(weatherinfo)\n                        .openOn(that.map)\n                      that.closeFullScreen2() // 关闭加载中\n                    })\n                })\n                .catch(error => {\n                  console.log(error)\n                  that.$message({\n                    message: '请求数据失败',\n                    type: 'warning'\n                  })\n                  that.closeFullScreen2error()\n                })\n            })\n            .catch(error => {\n              console.log(error)\n              that.$message({\n                message: '请求数据失败',\n                type: 'warning'\n              })\n              that.closeFullScreen2error()\n            })\n        })\n      },\n      openFullScreen2 () {\n        let that = this\n        that.loading = this.$loading({\n          lock: true,\n          text: '正在请求当地天气数据',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.7)'\n        })\n        setTimeout(() => {\n          that.loading.close()\n        }, 3000)\n      },\n      closeFullScreen2 () {\n        let that = this\n        that.loading.close()\n        that.$message({\n          message: '请求天气数据成功！',\n          type: 'success'\n        })\n      },\n      closeFullScreen2error () {\n        let that = this\n        that.loading.close()\n        that.$message({\n          message: '请求失败',\n          type: 'warning'\n        })\n      },\n      addvelocity () {\n        let that = this\n        this.$http.get('/api/winddata').then(response => {\n          console.log(response)\n          console.log(response.data)\n          that.velocityLayer = L.velocityLayer({\n            displayValues: true,\n            displayOptions: {\n              velocityType: 'Global Wind',\n              displayPosition: 'bottomleft',\n              displayEmptyString: 'No wind data'\n            },\n            data: response.data,\n            // OPTIONAL\n            // minVelocity: 0, // used to align color scale\n            maxVelocity: 15, // used to align color scale\n            velocityScale: 0.01, // modifier for particle animations, arbitrarily defaults to 0.005\n            // colorScale: [], // define your own array of hex/rgb colors\n            onAdd: null, // callback function\n            onRemove: null // callback function\n          })\n          that.layerControl.addOverlay(that.velocityLayer, 'Wind - Global')\n          that.velocityLayer.addTo(that.map)\n        }, response => {\n          console.log('数据加载失败')\n        })\n      },\n      firstmessage () {\n        this.$confirm('请打开\"Wind - Global\"图层以显示全球风向趋势，当前风向数据详情如下</br>' +\n          '数据来源：' + '美国国家气象局 -  NCEP（WMC）' + '</br>' +\n          '参考时间：' + '2016-04-30T06：00：00.000Z' + '</br>' +\n          '地球球形：' + 'radius of 6,371,229.0 m' + '</br>' +\n          'Data shown for the Great Barrier Reef has been derived from <a href=\"https://research.csiro.au/ereefs/\">CSIRO\\'s eReefs products</a>>', '温馨提示', {\n          confirmButtonText: '风向趋势',\n          cancelButtonText: '返回首页',\n          type: 'warning',\n          center: true,\n          dangerouslyUseHTMLString: true\n        }).then(() => {\n          this.$message({\n            type: 'success',\n            message: '地图查看!'\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: '前往首页'\n            })\n            this.$router.push({path: '/gis-master-map'})\n          })\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/gis-weather-map.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"margin\":\"0 auto\",\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"id\":\"map\"}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-422a7966\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/gis-weather-map.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-422a7966\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./gis-weather-map.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./gis-weather-map.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./gis-weather-map.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-422a7966\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./gis-weather-map.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-422a7966\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/gis-weather-map.vue\n// module id = null\n// module chunks = ","'use strict';\n\n/*\n Generic  Canvas Layer for leaflet 0.7 and 1.0-rc,\n copyright Stanislav Sumbera,  2016 , sumbera.com , license MIT\n originally created and motivated by L.CanvasOverlay  available here: https://gist.github.com/Sumbera/11114288\n\n */\n\n// -- L.DomUtil.setTransform from leaflet 1.0.0 to work on 0.0.7\n//------------------------------------------------------------------------------\nif (!L.DomUtil.setTransform) {\n\n\tL.DomUtil.setTransform = function (el, offset, scale) {\n\t\tvar pos = offset || new L.Point(0, 0);\n\n\t\tel.style[L.DomUtil.TRANSFORM] = (L.Browser.ie3d ? 'translate(' + pos.x + 'px,' + pos.y + 'px)' : 'translate3d(' + pos.x + 'px,' + pos.y + 'px,0)') + (scale ? ' scale(' + scale + ')' : '');\n\t};\n}\n\n// -- support for both  0.0.7 and 1.0.0 rc2 leaflet\nL.CanvasLayer = (L.Layer ? L.Layer : L.Class).extend({\n\t// -- initialized is called on prototype\n\tinitialize: function initialize(options) {\n\t\tthis._map = null;\n\t\tthis._canvas = null;\n\t\tthis._frame = null;\n\t\tthis._delegate = null;\n\t\tL.setOptions(this, options);\n\t},\n\n\tdelegate: function delegate(del) {\n\t\tthis._delegate = del;\n\t\treturn this;\n\t},\n\n\tneedRedraw: function needRedraw() {\n\t\tif (!this._frame) {\n\t\t\tthis._frame = L.Util.requestAnimFrame(this.drawLayer, this);\n\t\t}\n\t\treturn this;\n\t},\n\n\t//-------------------------------------------------------------\n\t_onLayerDidResize: function _onLayerDidResize(resizeEvent) {\n\t\tthis._canvas.width = resizeEvent.newSize.x;\n\t\tthis._canvas.height = resizeEvent.newSize.y;\n\t},\n\t//-------------------------------------------------------------\n\t_onLayerDidMove: function _onLayerDidMove() {\n\t\tvar topLeft = this._map.containerPointToLayerPoint([0, 0]);\n\t\tL.DomUtil.setPosition(this._canvas, topLeft);\n\t\tthis.drawLayer();\n\t},\n\t//-------------------------------------------------------------\n\tgetEvents: function getEvents() {\n\t\tvar events = {\n\t\t\tresize: this._onLayerDidResize,\n\t\t\tmoveend: this._onLayerDidMove\n\t\t};\n\t\tif (this._map.options.zoomAnimation && L.Browser.any3d) {\n\t\t\tevents.zoomanim = this._animateZoom;\n\t\t}\n\n\t\treturn events;\n\t},\n\t//-------------------------------------------------------------\n\tonAdd: function onAdd(map) {\n\t\tthis._map = map;\n\t\tthis._canvas = L.DomUtil.create('canvas', 'leaflet-layer');\n\t\tthis.tiles = {};\n\n\t\tvar size = this._map.getSize();\n\t\tthis._canvas.width = size.x;\n\t\tthis._canvas.height = size.y;\n\n\t\tvar animated = this._map.options.zoomAnimation && L.Browser.any3d;\n\t\tL.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n\t\tmap._panes.overlayPane.appendChild(this._canvas);\n\t\tmap.on(this.getEvents(), this);\n\n\t\tvar del = this._delegate || this;\n\t\tdel.onLayerDidMount && del.onLayerDidMount(); // -- callback\n\t\tthis.needRedraw();\n\n\t\tvar self = this;\n\t\tsetTimeout(function () {\n\t\t\tself._onLayerDidMove();\n\t\t}, 0);\n\t},\n\n\t//-------------------------------------------------------------\n\tonRemove: function onRemove(map) {\n\t\tvar del = this._delegate || this;\n\t\tdel.onLayerWillUnmount && del.onLayerWillUnmount(); // -- callback\n\n\n\t\tmap.getPanes().overlayPane.removeChild(this._canvas);\n\n\t\tmap.off(this.getEvents(), this);\n\n\t\tthis._canvas = null;\n\t},\n\n\t//------------------------------------------------------------\n\taddTo: function addTo(map) {\n\t\tmap.addLayer(this);\n\t\treturn this;\n\t},\n\t// --------------------------------------------------------------------------------\n\tLatLonToMercator: function LatLonToMercator(latlon) {\n\t\treturn {\n\t\t\tx: latlon.lng * 6378137 * Math.PI / 180,\n\t\t\ty: Math.log(Math.tan((90 + latlon.lat) * Math.PI / 360)) * 6378137\n\t\t};\n\t},\n\n\t//------------------------------------------------------------------------------\n\tdrawLayer: function drawLayer() {\n\t\t// -- todo make the viewInfo properties  flat objects.\n\t\tvar size = this._map.getSize();\n\t\tvar bounds = this._map.getBounds();\n\t\tvar zoom = this._map.getZoom();\n\n\t\tvar center = this.LatLonToMercator(this._map.getCenter());\n\t\tvar corner = this.LatLonToMercator(this._map.containerPointToLatLng(this._map.getSize()));\n\n\t\tvar del = this._delegate || this;\n\t\tdel.onDrawLayer && del.onDrawLayer({\n\t\t\tlayer: this,\n\t\t\tcanvas: this._canvas,\n\t\t\tbounds: bounds,\n\t\t\tsize: size,\n\t\t\tzoom: zoom,\n\t\t\tcenter: center,\n\t\t\tcorner: corner\n\t\t});\n\t\tthis._frame = null;\n\t},\n\t// -- L.DomUtil.setTransform from leaflet 1.0.0 to work on 0.0.7\n\t//------------------------------------------------------------------------------\n\t_setTransform: function _setTransform(el, offset, scale) {\n\t\tvar pos = offset || new L.Point(0, 0);\n\n\t\tel.style[L.DomUtil.TRANSFORM] = (L.Browser.ie3d ? 'translate(' + pos.x + 'px,' + pos.y + 'px)' : 'translate3d(' + pos.x + 'px,' + pos.y + 'px,0)') + (scale ? ' scale(' + scale + ')' : '');\n\t},\n\n\t//------------------------------------------------------------------------------\n\t_animateZoom: function _animateZoom(e) {\n\t\tvar scale = this._map.getZoomScale(e.zoom);\n\t\t// -- different calc of offset in leaflet 1.0.0 and 0.0.7 thanks for 1.0.0-rc2 calc @jduggan1\n\t\tvar offset = L.Layer ? this._map._latLngToNewLayerPoint(this._map.getBounds().getNorthWest(), e.zoom, e.center) : this._map._getCenterOffset(e.center)._multiplyBy(-scale).subtract(this._map._getMapPanePos());\n\n\t\tL.DomUtil.setTransform(this._canvas, offset, scale);\n\t}\n});\n\nL.canvasLayer = function () {\n\treturn new L.CanvasLayer();\n};\nL.Control.Velocity = L.Control.extend({\n\n\toptions: {\n\t\tposition: 'bottomleft',\n\t\temptyString: 'Unavailable',\n\t\t// Could be any combination of 'bearing' (angle toward which the flow goes) or 'meteo' (angle from which the flow comes)\n\t\t// and 'CW' (angle value increases clock-wise) or 'CCW' (angle value increases counter clock-wise)\n\t\tangleConvention: 'bearingCCW',\n\t\t// Could be 'm/s' for meter per second, 'k/h' for kilometer per hour or 'kt' for knots\n\t\tspeedUnit: 'm/s',\n\t\tonAdd: null,\n\t\tonRemove: null\n\t},\n\n\tonAdd: function onAdd(map) {\n\t\tthis._container = L.DomUtil.create('div', 'leaflet-control-velocity');\n\t\tL.DomEvent.disableClickPropagation(this._container);\n\t\tmap.on('mousemove', this._onMouseMove, this);\n\t\tthis._container.innerHTML = this.options.emptyString;\n\t\tif (this.options.leafletVelocity.options.onAdd) this.options.leafletVelocity.options.onAdd();\n\t\treturn this._container;\n\t},\n\n\tonRemove: function onRemove(map) {\n\t\tmap.off('mousemove', this._onMouseMove, this);\n\t\tif (this.options.leafletVelocity.options.onRemove) this.options.leafletVelocity.options.onRemove();\n\t},\n\n\tvectorToSpeed: function vectorToSpeed(uMs, vMs, unit) {\n\t\tvar velocityAbs = Math.sqrt(Math.pow(uMs, 2) + Math.pow(vMs, 2));\n\t\t// Default is m/s\n\t\tif (unit === 'k/h') {\n\t\t\treturn this.meterSec2kilometerHour(velocityAbs);\n\t\t} else if (unit === 'kt') {\n\t\t\treturn this.meterSec2Knots(velocityAbs);\n\t\t} else {\n\t\t\treturn velocityAbs;\n\t\t}\n\t},\n\n\tvectorToDegrees: function vectorToDegrees(uMs, vMs, angleConvention) {\n\n\t\t// Default angle convention is CW\n\t\tif (angleConvention.endsWith('CCW')) {\n\t\t\t// vMs comes out upside-down..\n\t\t\tvMs = vMs > 0 ? vMs = -vMs : Math.abs(vMs);\n\t\t}\n\t\tvar velocityAbs = Math.sqrt(Math.pow(uMs, 2) + Math.pow(vMs, 2));\n\n\t\tvar velocityDir = Math.atan2(uMs / velocityAbs, vMs / velocityAbs);\n\t\tvar velocityDirToDegrees = velocityDir * 180 / Math.PI + 180;\n\n\t\tif (angleConvention === 'bearingCW' || angleConvention === 'meteoCCW') {\n\t\t\tvelocityDirToDegrees += 180;\n\t\t\tif (velocityDirToDegrees >= 360) velocityDirToDegrees -= 360;\n\t\t}\n\n\t\treturn velocityDirToDegrees;\n\t},\n\n\tmeterSec2Knots: function meterSec2Knots(meters) {\n\t\treturn meters / 0.514;\n\t},\n\n\tmeterSec2kilometerHour: function meterSec2kilometerHour(meters) {\n\t\treturn meters * 3.6;\n\t},\n\n\t_onMouseMove: function _onMouseMove(e) {\n\n\t\tvar self = this;\n\t\tvar pos = this.options.leafletVelocity._map.containerPointToLatLng(L.point(e.containerPoint.x, e.containerPoint.y));\n\t\tvar gridValue = this.options.leafletVelocity._windy.interpolatePoint(pos.lng, pos.lat);\n\t\tvar htmlOut = \"\";\n\n\t\tif (gridValue && !isNaN(gridValue[0]) && !isNaN(gridValue[1]) && gridValue[2]) {\n\t\t\thtmlOut = \"<strong>\" + this.options.velocityType + \" Direction: </strong>\" + self.vectorToDegrees(gridValue[0], gridValue[1], this.options.angleConvention).toFixed(2) + \"°\" + \", <strong>\" + this.options.velocityType + \" Speed: </strong>\" + self.vectorToSpeed(gridValue[0], gridValue[1], this.options.speedUnit).toFixed(2) + this.options.speedUnit;\n\t\t} else {\n\t\t\thtmlOut = this.options.emptyString;\n\t\t}\n\n\t\tself._container.innerHTML = htmlOut;\n\t}\n\n});\n\nL.Map.mergeOptions({\n\tpositionControl: false\n});\n\nL.Map.addInitHook(function () {\n\tif (this.options.positionControl) {\n\t\tthis.positionControl = new L.Control.MousePosition();\n\t\tthis.addControl(this.positionControl);\n\t}\n});\n\nL.control.velocity = function (options) {\n\treturn new L.Control.Velocity(options);\n};\n\nL.VelocityLayer = (L.Layer ? L.Layer : L.Class).extend({\n\n\toptions: {\n\t\tdisplayValues: true,\n\t\tdisplayOptions: {\n\t\t\tvelocityType: 'Velocity',\n\t\t\tposition: 'bottomleft',\n\t\t\temptyString: 'No velocity data'\n\t\t},\n\t\tmaxVelocity: 10, // used to align color scale\n\t\tcolorScale: null,\n\t\tdata: null\n\t},\n\n\t_map: null,\n\t_canvasLayer: null,\n\t_windy: null,\n\t_context: null,\n\t_timer: 0,\n\t_mouseControl: null,\n\n\tinitialize: function initialize(options) {\n\t\tL.setOptions(this, options);\n\t},\n\n\tonAdd: function onAdd(map) {\n\t\t// create canvas, add overlay control\n\t\tthis._canvasLayer = L.canvasLayer().delegate(this);\n\t\tthis._canvasLayer.addTo(map);\n\t\tthis._map = map;\n\t},\n\n\tonRemove: function onRemove(map) {\n\t\tthis._destroyWind();\n\t},\n\n\tsetData: function setData(data) {\n\t\tthis.options.data = data;\n\n\t\tif (this._windy) {\n\t\t\tthis._windy.setData(data);\n\t\t\tthis._clearAndRestart();\n\t\t}\n\n\t\tthis.fire('load');\n\t},\n\n\t/*------------------------------------ PRIVATE ------------------------------------------*/\n\n\tonDrawLayer: function onDrawLayer(overlay, params) {\n\t\tvar self = this;\n\n\t\tif (!this._windy) {\n\t\t\tthis._initWindy(this);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.options.data) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._timer) clearTimeout(self._timer);\n\n\t\tthis._timer = setTimeout(function () {\n\t\t\tself._startWindy();\n\t\t}, 750); // showing velocity is delayed\n\t},\n\n\t_startWindy: function _startWindy() {\n\t\tvar bounds = this._map.getBounds();\n\t\tvar size = this._map.getSize();\n\n\t\t// bounds, width, height, extent\n\t\tthis._windy.start([[0, 0], [size.x, size.y]], size.x, size.y, [[bounds._southWest.lng, bounds._southWest.lat], [bounds._northEast.lng, bounds._northEast.lat]]);\n\t},\n\n\t_initWindy: function _initWindy(self) {\n\n\t\t// windy object, copy options\n\t\tvar options = Object.assign({ canvas: self._canvasLayer._canvas }, self.options);\n\t\tthis._windy = new Windy(options);\n\n\t\t// prepare context global var, start drawing\n\t\tthis._context = this._canvasLayer._canvas.getContext('2d');\n\t\tthis._canvasLayer._canvas.classList.add(\"velocity-overlay\");\n\t\tthis.onDrawLayer();\n\n\t\tthis._map.on('dragstart', self._windy.stop);\n\t\tthis._map.on('dragend', self._clearAndRestart);\n\t\tthis._map.on('zoomstart', self._windy.stop);\n\t\tthis._map.on('zoomend', self._clearAndRestart);\n\t\tthis._map.on('resize', self._clearWind);\n\n\t\tthis._initMouseHandler();\n\t},\n\n\t_initMouseHandler: function _initMouseHandler() {\n\t\tif (!this._mouseControl && this.options.displayValues) {\n\t\t\tvar options = this.options.displayOptions || {};\n\t\t\toptions['leafletVelocity'] = this;\n\t\t\tthis._mouseControl = L.control.velocity(options).addTo(this._map);\n\t\t}\n\t},\n\n\t_clearAndRestart: function _clearAndRestart() {\n\t\tif (this._context) this._context.clearRect(0, 0, 3000, 3000);\n\t\tif (this._windy) this._startWindy();\n\t},\n\n\t_clearWind: function _clearWind() {\n\t\tif (this._windy) this._windy.stop();\n\t\tif (this._context) this._context.clearRect(0, 0, 3000, 3000);\n\t},\n\n\t_destroyWind: function _destroyWind() {\n\t\tif (this._timer) clearTimeout(this._timer);\n\t\tif (this._windy) this._windy.stop();\n\t\tif (this._context) this._context.clearRect(0, 0, 3000, 3000);\n\t\tif (this._mouseControl) this._map.removeControl(this._mouseControl);\n\t\tthis._mouseControl = null;\n\t\tthis._windy = null;\n\t\tthis._map.removeLayer(this._canvasLayer);\n\t}\n});\n\nL.velocityLayer = function (options) {\n\treturn new L.VelocityLayer(options);\n};\n/*  Global class for simulating the movement of particle through a 1km wind grid\n\n credit: All the credit for this work goes to: https://github.com/cambecc for creating the repo:\n https://github.com/cambecc/earth. The majority of this code is directly take nfrom there, since its awesome.\n\n This class takes a canvas element and an array of data (1km GFS from http://www.emc.ncep.noaa.gov/index.php?branch=GFS)\n and then uses a mercator (forward/reverse) projection to correctly map wind vectors in \"map space\".\n\n The \"start\" method takes the bounds of the map at its current extent and starts the whole gridding,\n interpolation and animation process.\n */\n\nvar Windy = function Windy(params) {\n\n\tvar MIN_VELOCITY_INTENSITY = params.minVelocity || 0; // velocity at which particle intensity is minimum (m/s)\n\tvar MAX_VELOCITY_INTENSITY = params.maxVelocity || 10; // velocity at which particle intensity is maximum (m/s)\n\tvar VELOCITY_SCALE = (params.velocityScale || 0.005) * (Math.pow(window.devicePixelRatio, 1 / 3) || 1); // scale for wind velocity (completely arbitrary--this value looks nice)\n\tvar MAX_PARTICLE_AGE = params.particleAge || 90; // max number of frames a particle is drawn before regeneration\n\tvar PARTICLE_LINE_WIDTH = params.lineWidth || 1; // line width of a drawn particle\n\tvar PARTICLE_MULTIPLIER = params.particleMultiplier || 1 / 300; // particle count scalar (completely arbitrary--this values looks nice)\n\tvar PARTICLE_REDUCTION = Math.pow(window.devicePixelRatio, 1 / 3) || 1.6; // multiply particle count for mobiles by this amount\n\tvar FRAME_RATE = params.frameRate || 15,\n\t    FRAME_TIME = 1000 / FRAME_RATE; // desired frames per second\n\n\tvar defaulColorScale = [\"rgb(36,104, 180)\", \"rgb(60,157, 194)\", \"rgb(128,205,193 )\", \"rgb(151,218,168 )\", \"rgb(198,231,181)\", \"rgb(238,247,217)\", \"rgb(255,238,159)\", \"rgb(252,217,125)\", \"rgb(255,182,100)\", \"rgb(252,150,75)\", \"rgb(250,112,52)\", \"rgb(245,64,32)\", \"rgb(237,45,28)\", \"rgb(220,24,32)\", \"rgb(180,0,35)\"];\n\n\tvar colorScale = params.colorScale || defaulColorScale;\n\n\tvar NULL_WIND_VECTOR = [NaN, NaN, null]; // singleton for no wind in the form: [u, v, magnitude]\n\n\tvar builder;\n\tvar grid;\n\tvar gridData = params.data;\n\tvar date;\n\tvar λ0, φ0, Δλ, Δφ, ni, nj;\n\n\tvar setData = function setData(data) {\n\t\tgridData = data;\n\t};\n\n\t// interpolation for vectors like wind (u,v,m)\n\tvar bilinearInterpolateVector = function bilinearInterpolateVector(x, y, g00, g10, g01, g11) {\n\t\tvar rx = 1 - x;\n\t\tvar ry = 1 - y;\n\t\tvar a = rx * ry,\n\t\t    b = x * ry,\n\t\t    c = rx * y,\n\t\t    d = x * y;\n\t\tvar u = g00[0] * a + g10[0] * b + g01[0] * c + g11[0] * d;\n\t\tvar v = g00[1] * a + g10[1] * b + g01[1] * c + g11[1] * d;\n\t\treturn [u, v, Math.sqrt(u * u + v * v)];\n\t};\n\n\tvar createWindBuilder = function createWindBuilder(uComp, vComp) {\n\t\tvar uData = uComp.data,\n\t\t    vData = vComp.data;\n\t\treturn {\n\t\t\theader: uComp.header,\n\t\t\t//recipe: recipeFor(\"wind-\" + uComp.header.surface1Value),\n\t\t\tdata: function data(i) {\n\t\t\t\treturn [uData[i], vData[i]];\n\t\t\t},\n\t\t\tinterpolate: bilinearInterpolateVector\n\t\t};\n\t};\n\n\tvar createBuilder = function createBuilder(data) {\n\t\tvar uComp = null,\n\t\t    vComp = null,\n\t\t    scalar = null;\n\n\t\tdata.forEach(function (record) {\n\t\t\tswitch (record.header.parameterCategory + \",\" + record.header.parameterNumber) {\n\t\t\t\tcase \"1,2\":\n\t\t\t\tcase \"2,2\":\n\t\t\t\t\tuComp = record;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"1,3\":\n\t\t\t\tcase \"2,3\":\n\t\t\t\t\tvComp = record;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tscalar = record;\n\t\t\t}\n\t\t});\n\n\t\treturn createWindBuilder(uComp, vComp);\n\t};\n\n\tvar buildGrid = function buildGrid(data, callback) {\n\n\t\tbuilder = createBuilder(data);\n\t\tvar header = builder.header;\n\n\t\tλ0 = header.lo1;\n\t\tφ0 = header.la1; // the grid's origin (e.g., 0.0E, 90.0N)\n\n\t\tΔλ = header.dx;\n\t\tΔφ = header.dy; // distance between grid points (e.g., 2.5 deg lon, 2.5 deg lat)\n\n\t\tni = header.nx;\n\t\tnj = header.ny; // number of grid points W-E and N-S (e.g., 144 x 73)\n\n\t\tdate = new Date(header.refTime);\n\t\tdate.setHours(date.getHours() + header.forecastTime);\n\n\t\t// Scan mode 0 assumed. Longitude increases from λ0, and latitude decreases from φ0.\n\t\t// http://www.nco.ncep.noaa.gov/pmb/docs/grib2/grib2_table3-4.shtml\n\t\tgrid = [];\n\t\tvar p = 0;\n\t\tvar isContinuous = Math.floor(ni * Δλ) >= 360;\n\n\t\tfor (var j = 0; j < nj; j++) {\n\t\t\tvar row = [];\n\t\t\tfor (var i = 0; i < ni; i++, p++) {\n\t\t\t\trow[i] = builder.data(p);\n\t\t\t}\n\t\t\tif (isContinuous) {\n\t\t\t\t// For wrapped grids, duplicate first column as last column to simplify interpolation logic\n\t\t\t\trow.push(row[0]);\n\t\t\t}\n\t\t\tgrid[j] = row;\n\t\t}\n\n\t\tcallback({\n\t\t\tdate: date,\n\t\t\tinterpolate: interpolate\n\t\t});\n\t};\n\n\t/**\n  * Get interpolated grid value from Lon/Lat position\n  * @param λ {Float} Longitude\n  * @param φ {Float} Latitude\n  * @returns {Object}\n  */\n\tvar interpolate = function interpolate(λ, φ) {\n\n\t\tif (!grid) return null;\n\n\t\tvar i = floorMod(λ - λ0, 360) / Δλ; // calculate longitude index in wrapped range [0, 360)\n\t\tvar j = (φ0 - φ) / Δφ; // calculate latitude index in direction +90 to -90\n\n\t\tvar fi = Math.floor(i),\n\t\t    ci = fi + 1;\n\t\tvar fj = Math.floor(j),\n\t\t    cj = fj + 1;\n\n\t\tvar row;\n\t\tif (row = grid[fj]) {\n\t\t\tvar g00 = row[fi];\n\t\t\tvar g10 = row[ci];\n\t\t\tif (isValue(g00) && isValue(g10) && (row = grid[cj])) {\n\t\t\t\tvar g01 = row[fi];\n\t\t\t\tvar g11 = row[ci];\n\t\t\t\tif (isValue(g01) && isValue(g11)) {\n\t\t\t\t\t// All four points found, so interpolate the value.\n\t\t\t\t\treturn builder.interpolate(i - fi, j - fj, g00, g10, g01, g11);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\t/**\n  * @returns {Boolean} true if the specified value is not null and not undefined.\n  */\n\tvar isValue = function isValue(x) {\n\t\treturn x !== null && x !== undefined;\n\t};\n\n\t/**\n  * @returns {Number} returns remainder of floored division, i.e., floor(a / n). Useful for consistent modulo\n  *          of negative numbers. See http://en.wikipedia.org/wiki/Modulo_operation.\n  */\n\tvar floorMod = function floorMod(a, n) {\n\t\treturn a - n * Math.floor(a / n);\n\t};\n\n\t/**\n  * @returns {Number} the value x clamped to the range [low, high].\n  */\n\tvar clamp = function clamp(x, range) {\n\t\treturn Math.max(range[0], Math.min(x, range[1]));\n\t};\n\n\t/**\n  * @returns {Boolean} true if agent is probably a mobile device. Don't really care if this is accurate.\n  */\n\tvar isMobile = function isMobile() {\n\t\treturn (/android|blackberry|iemobile|ipad|iphone|ipod|opera mini|webos/i.test(navigator.userAgent)\n\t\t);\n\t};\n\n\t/**\n  * Calculate distortion of the wind vector caused by the shape of the projection at point (x, y). The wind\n  * vector is modified in place and returned by this function.\n  */\n\tvar distort = function distort(projection, λ, φ, x, y, scale, wind, windy) {\n\t\tvar u = wind[0] * scale;\n\t\tvar v = wind[1] * scale;\n\t\tvar d = distortion(projection, λ, φ, x, y, windy);\n\n\t\t// Scale distortion vectors by u and v, then add.\n\t\twind[0] = d[0] * u + d[2] * v;\n\t\twind[1] = d[1] * u + d[3] * v;\n\t\treturn wind;\n\t};\n\n\tvar distortion = function distortion(projection, λ, φ, x, y, windy) {\n\t\tvar τ = 2 * Math.PI;\n\t\tvar H = Math.pow(10, -5.2);\n\t\tvar hλ = λ < 0 ? H : -H;\n\t\tvar hφ = φ < 0 ? H : -H;\n\n\t\tvar pλ = project(φ, λ + hλ, windy);\n\t\tvar pφ = project(φ + hφ, λ, windy);\n\n\t\t// Meridian scale factor (see Snyder, equation 4-3), where R = 1. This handles issue where length of 1º λ\n\t\t// changes depending on φ. Without this, there is a pinching effect at the poles.\n\t\tvar k = Math.cos(φ / 360 * τ);\n\t\treturn [(pλ[0] - x) / hλ / k, (pλ[1] - y) / hλ / k, (pφ[0] - x) / hφ, (pφ[1] - y) / hφ];\n\t};\n\n\tvar createField = function createField(columns, bounds, callback) {\n\n\t\t/**\n   * @returns {Array} wind vector [u, v, magnitude] at the point (x, y), or [NaN, NaN, null] if wind\n   *          is undefined at that point.\n   */\n\t\tfunction field(x, y) {\n\t\t\tvar column = columns[Math.round(x)];\n\t\t\treturn column && column[Math.round(y)] || NULL_WIND_VECTOR;\n\t\t}\n\n\t\t// Frees the massive \"columns\" array for GC. Without this, the array is leaked (in Chrome) each time a new\n\t\t// field is interpolated because the field closure's context is leaked, for reasons that defy explanation.\n\t\tfield.release = function () {\n\t\t\tcolumns = [];\n\t\t};\n\n\t\tfield.randomize = function (o) {\n\t\t\t// UNDONE: this method is terrible\n\t\t\tvar x, y;\n\t\t\tvar safetyNet = 0;\n\t\t\tdo {\n\t\t\t\tx = Math.round(Math.floor(Math.random() * bounds.width) + bounds.x);\n\t\t\t\ty = Math.round(Math.floor(Math.random() * bounds.height) + bounds.y);\n\t\t\t} while (field(x, y)[2] === null && safetyNet++ < 30);\n\t\t\to.x = x;\n\t\t\to.y = y;\n\t\t\treturn o;\n\t\t};\n\n\t\tcallback(bounds, field);\n\t};\n\n\tvar buildBounds = function buildBounds(bounds, width, height) {\n\t\tvar upperLeft = bounds[0];\n\t\tvar lowerRight = bounds[1];\n\t\tvar x = Math.round(upperLeft[0]); //Math.max(Math.floor(upperLeft[0], 0), 0);\n\t\tvar y = Math.max(Math.floor(upperLeft[1], 0), 0);\n\t\tvar xMax = Math.min(Math.ceil(lowerRight[0], width), width - 1);\n\t\tvar yMax = Math.min(Math.ceil(lowerRight[1], height), height - 1);\n\t\treturn { x: x, y: y, xMax: width, yMax: yMax, width: width, height: height };\n\t};\n\n\tvar deg2rad = function deg2rad(deg) {\n\t\treturn deg / 180 * Math.PI;\n\t};\n\n\tvar rad2deg = function rad2deg(ang) {\n\t\treturn ang / (Math.PI / 180.0);\n\t};\n\n\tvar invert = function invert(x, y, windy) {\n\t\tvar mapLonDelta = windy.east - windy.west;\n\t\tvar worldMapRadius = windy.width / rad2deg(mapLonDelta) * 360 / (2 * Math.PI);\n\t\tvar mapOffsetY = worldMapRadius / 2 * Math.log((1 + Math.sin(windy.south)) / (1 - Math.sin(windy.south)));\n\t\tvar equatorY = windy.height + mapOffsetY;\n\t\tvar a = (equatorY - y) / worldMapRadius;\n\n\t\tvar lat = 180 / Math.PI * (2 * Math.atan(Math.exp(a)) - Math.PI / 2);\n\t\tvar lon = rad2deg(windy.west) + x / windy.width * rad2deg(mapLonDelta);\n\t\treturn [lon, lat];\n\t};\n\n\tvar mercY = function mercY(lat) {\n\t\treturn Math.log(Math.tan(lat / 2 + Math.PI / 4));\n\t};\n\n\tvar project = function project(lat, lon, windy) {\n\t\t// both in radians, use deg2rad if neccessary\n\t\tvar ymin = mercY(windy.south);\n\t\tvar ymax = mercY(windy.north);\n\t\tvar xFactor = windy.width / (windy.east - windy.west);\n\t\tvar yFactor = windy.height / (ymax - ymin);\n\n\t\tvar y = mercY(deg2rad(lat));\n\t\tvar x = (deg2rad(lon) - windy.west) * xFactor;\n\t\tvar y = (ymax - y) * yFactor; // y points south\n\t\treturn [x, y];\n\t};\n\n\tvar interpolateField = function interpolateField(grid, bounds, extent, callback) {\n\n\t\tvar projection = {};\n\t\tvar mapArea = (extent.south - extent.north) * (extent.west - extent.east);\n\t\tvar velocityScale = VELOCITY_SCALE * Math.pow(mapArea, 0.4);\n\n\t\tvar columns = [];\n\t\tvar x = bounds.x;\n\n\t\tfunction interpolateColumn(x) {\n\t\t\tvar column = [];\n\t\t\tfor (var y = bounds.y; y <= bounds.yMax; y += 2) {\n\t\t\t\tvar coord = invert(x, y, extent);\n\t\t\t\tif (coord) {\n\t\t\t\t\tvar λ = coord[0],\n\t\t\t\t\t    φ = coord[1];\n\t\t\t\t\tif (isFinite(λ)) {\n\t\t\t\t\t\tvar wind = grid.interpolate(λ, φ);\n\t\t\t\t\t\tif (wind) {\n\t\t\t\t\t\t\twind = distort(projection, λ, φ, x, y, velocityScale, wind, extent);\n\t\t\t\t\t\t\tcolumn[y + 1] = column[y] = wind;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcolumns[x + 1] = columns[x] = column;\n\t\t}\n\n\t\t(function batchInterpolate() {\n\t\t\tvar start = Date.now();\n\t\t\twhile (x < bounds.width) {\n\t\t\t\tinterpolateColumn(x);\n\t\t\t\tx += 2;\n\t\t\t\tif (Date.now() - start > 1000) {\n\t\t\t\t\t//MAX_TASK_TIME) {\n\t\t\t\t\tsetTimeout(batchInterpolate, 25);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcreateField(columns, bounds, callback);\n\t\t})();\n\t};\n\n\tvar animationLoop;\n\tvar animate = function animate(bounds, field) {\n\n\t\tfunction windIntensityColorScale(min, max) {\n\n\t\t\tcolorScale.indexFor = function (m) {\n\t\t\t\t// map velocity speed to a style\n\t\t\t\treturn Math.max(0, Math.min(colorScale.length - 1, Math.round((m - min) / (max - min) * (colorScale.length - 1))));\n\t\t\t};\n\n\t\t\treturn colorScale;\n\t\t}\n\n\t\tvar colorStyles = windIntensityColorScale(MIN_VELOCITY_INTENSITY, MAX_VELOCITY_INTENSITY);\n\t\tvar buckets = colorStyles.map(function () {\n\t\t\treturn [];\n\t\t});\n\n\t\tvar particleCount = Math.round(bounds.width * bounds.height * PARTICLE_MULTIPLIER);\n\t\tif (isMobile()) {\n\t\t\tparticleCount *= PARTICLE_REDUCTION;\n\t\t}\n\n\t\tvar fadeFillStyle = \"rgba(0, 0, 0, 0.97)\";\n\n\t\tvar particles = [];\n\t\tfor (var i = 0; i < particleCount; i++) {\n\t\t\tparticles.push(field.randomize({ age: Math.floor(Math.random() * MAX_PARTICLE_AGE) + 0 }));\n\t\t}\n\n\t\tfunction evolve() {\n\t\t\tbuckets.forEach(function (bucket) {\n\t\t\t\tbucket.length = 0;\n\t\t\t});\n\t\t\tparticles.forEach(function (particle) {\n\t\t\t\tif (particle.age > MAX_PARTICLE_AGE) {\n\t\t\t\t\tfield.randomize(particle).age = 0;\n\t\t\t\t}\n\t\t\t\tvar x = particle.x;\n\t\t\t\tvar y = particle.y;\n\t\t\t\tvar v = field(x, y); // vector at current position\n\t\t\t\tvar m = v[2];\n\t\t\t\tif (m === null) {\n\t\t\t\t\tparticle.age = MAX_PARTICLE_AGE; // particle has escaped the grid, never to return...\n\t\t\t\t} else {\n\t\t\t\t\tvar xt = x + v[0];\n\t\t\t\t\tvar yt = y + v[1];\n\t\t\t\t\tif (field(xt, yt)[2] !== null) {\n\t\t\t\t\t\t// Path from (x,y) to (xt,yt) is visible, so add this particle to the appropriate draw bucket.\n\t\t\t\t\t\tparticle.xt = xt;\n\t\t\t\t\t\tparticle.yt = yt;\n\t\t\t\t\t\tbuckets[colorStyles.indexFor(m)].push(particle);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Particle isn't visible, but it still moves through the field.\n\t\t\t\t\t\tparticle.x = xt;\n\t\t\t\t\t\tparticle.y = yt;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tparticle.age += 1;\n\t\t\t});\n\t\t}\n\n\t\tvar g = params.canvas.getContext(\"2d\");\n\t\tg.lineWidth = PARTICLE_LINE_WIDTH;\n\t\tg.fillStyle = fadeFillStyle;\n\t\tg.globalAlpha = 0.6;\n\n\t\tfunction draw() {\n\t\t\t// Fade existing particle trails.\n\t\t\tvar prev = \"lighter\";\n\t\t\tg.globalCompositeOperation = \"destination-in\";\n\t\t\tg.fillRect(bounds.x, bounds.y, bounds.width, bounds.height);\n\t\t\tg.globalCompositeOperation = prev;\n\t\t\tg.globalAlpha = 0.9;\n\n\t\t\t// Draw new particle trails.\n\t\t\tbuckets.forEach(function (bucket, i) {\n\t\t\t\tif (bucket.length > 0) {\n\t\t\t\t\tg.beginPath();\n\t\t\t\t\tg.strokeStyle = colorStyles[i];\n\t\t\t\t\tbucket.forEach(function (particle) {\n\t\t\t\t\t\tg.moveTo(particle.x, particle.y);\n\t\t\t\t\t\tg.lineTo(particle.xt, particle.yt);\n\t\t\t\t\t\tparticle.x = particle.xt;\n\t\t\t\t\t\tparticle.y = particle.yt;\n\t\t\t\t\t});\n\t\t\t\t\tg.stroke();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvar then = Date.now();\n\t\t(function frame() {\n\t\t\tanimationLoop = requestAnimationFrame(frame);\n\t\t\tvar now = Date.now();\n\t\t\tvar delta = now - then;\n\t\t\tif (delta > FRAME_TIME) {\n\t\t\t\tthen = now - delta % FRAME_TIME;\n\t\t\t\tevolve();\n\t\t\t\tdraw();\n\t\t\t}\n\t\t})();\n\t};\n\n\tvar start = function start(bounds, width, height, extent) {\n\n\t\tvar mapBounds = {\n\t\t\tsouth: deg2rad(extent[0][1]),\n\t\t\tnorth: deg2rad(extent[1][1]),\n\t\t\teast: deg2rad(extent[1][0]),\n\t\t\twest: deg2rad(extent[0][0]),\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\n\t\tstop();\n\n\t\t// build grid\n\t\tbuildGrid(gridData, function (grid) {\n\t\t\t// interpolateField\n\t\t\tinterpolateField(grid, buildBounds(bounds, width, height), mapBounds, function (bounds, field) {\n\t\t\t\t// animate the canvas with random points\n\t\t\t\twindy.field = field;\n\t\t\t\tanimate(bounds, field);\n\t\t\t});\n\t\t});\n\t};\n\n\tvar stop = function stop() {\n\t\tif (windy.field) windy.field.release();\n\t\tif (animationLoop) cancelAnimationFrame(animationLoop);\n\t};\n\n\tvar windy = {\n\t\tparams: params,\n\t\tstart: start,\n\t\tstop: stop,\n\t\tcreateField: createField,\n\t\tinterpolatePoint: interpolate,\n\t\tsetData: setData\n\t};\n\n\treturn windy;\n};\n\nif (!window.cancelAnimationFrame) {\n\twindow.cancelAnimationFrame = function (id) {\n\t\tclearTimeout(id);\n\t};\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/leaflet-velocity/dist/leaflet-velocity.js\n// module id = vqNC\n// module chunks = 4"],"sourceRoot":""}