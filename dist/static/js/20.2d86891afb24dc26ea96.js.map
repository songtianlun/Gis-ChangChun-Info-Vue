{"version":3,"sources":["webpack:///src/pages/Leaflet.vue","webpack:///./src/pages/Leaflet.vue?093c","webpack:///./src/pages/Leaflet.vue"],"names":["Leaflet","name","data","map","mounted","this","initmap","methods","Esri_WorldImagery","leaflet_src_default","a","tileLayer","attribution","Esri_DarkGreyCanvas","normalm1","chinaProvider","normalm3","normalm4","normalm5","normalm","normala","imgm","imga","normal","layerGroup","image","normalMap","satelliteMap","Gaode","Gaodimgem","Gaodimga","OpenStreetMap","MapBox","baseLayers","Esri卫星图","Esri-灰白","智图地图","智图午夜蓝","智图灰色","智图暖色","天地图","天地图影像","谷歌地图","谷歌影像","高德地图","高德影像","center","zoom","layers","zoomControl","control","addTo","zoomInTitle","zoomOutTitle","mypop","popup","on","e","content","latlng","toString","console","log","setLatLng","setContent","pages_Leaflet","render","_h","$createElement","_self","_c","staticStyle","margin","width","height","attrs","id","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"8JAOAA,GACAC,KAAA,UACAC,KAFA,WAGA,OACAC,IAAA,OAGAC,QAPA,WAQAC,KAAAC,WAEAC,SACAD,QAAA,WAIA,IAAAE,EAAAC,EAAAC,EAAAC,UAAA,gGACAC,YAAA,kJAIAC,EAAAJ,EAAAC,EAAAC,UACA,qHAIAC,YAAA,+MAOAE,EAAAL,EAAAC,EAAAC,UAAAI,cAAA,mBACAH,YAAA,wBAKAI,GAHAP,EAAAC,EAAAC,UAAAI,cAAA,qBACAH,YAAA,wBAEAH,EAAAC,EAAAC,UAAAI,cAAA,4BACAH,YAAA,yBAEAK,EAAAR,EAAAC,EAAAC,UAAAI,cAAA,oBACAH,YAAA,wBAEAM,EAAAT,EAAAC,EAAAC,UAAAI,cAAA,oBACAH,YAAA,wBAQAO,GANAV,EAAAC,EAAAC,UAAAI,cAAA,oBACAH,YAAA,wBAKAH,EAAAC,EAAAC,UAAAI,cAAA,uBACAH,YAAA,wBAEAQ,EAAAX,EAAAC,EAAAC,UAAAI,cAAA,4BACAH,YAAA,uBAEAS,EAAAZ,EAAAC,EAAAC,UAAAI,cAAA,0BACAH,YAAA,uBAEAU,EAAAb,EAAAC,EAAAC,UAAAI,cAAA,+BACAH,YAAA,uBAEAW,EAAAd,EAAAC,EAAAc,YAAAL,EAAAC,IACAK,EAAAhB,EAAAC,EAAAc,YAAAH,EAAAC,IAIAI,EAAAjB,EAAAC,EAAAC,UAAAI,cAAA,qBACAH,YAAA,8BAEAe,EAAAlB,EAAAC,EAAAC,UAAAI,cAAA,wBACAH,YAAA,8BAKAgB,EAAAnB,EAAAC,EAAAC,UAAAI,cAAA,oBACAH,YAAA,wBAEAiB,EAAApB,EAAAC,EAAAC,UAAAI,cAAA,uBACAH,YAAA,wBAEAkB,EAAArB,EAAAC,EAAAC,UAAAI,cAAA,4BACAH,YAAA,wBAEAmB,EAAAtB,EAAAC,EAAAC,UACA,qDACAC,YAAA,iCAGAoB,EACAvB,EAAAC,EAAAC,UACA,+MACAC,YAAA,0DAGAqB,GACAC,UAAA1B,EACA2B,UAAAtB,EACAuB,OAAAtB,EACAuB,QAAArB,EACAsB,OAAArB,EACAsB,OAAArB,EACAsB,MAAAjB,EACAkB,QAAAhB,EACAiB,OAAAhB,EACAiB,OAAAhB,EACAiB,OAAAhB,EACAiB,OAbApC,EAAAC,EAAAc,YAAAK,EAAAC,IAcAC,gBACAC,UAEA3B,KAAAF,IAAAM,EAAAC,EAAAP,IAAA,OACA2C,QAAA,sBACAC,KAAA,GACAC,QAAAlC,GACAmC,aAAA,IAGAxC,EAAAC,EAAAwC,QAAAF,OAAAf,EAAA,MAAAkB,MAAA9C,KAAAF,KACAM,EAAAC,EAAAwC,QAAAH,MACAK,YAAA,KACAC,aAAA,OACAF,MAAA9C,KAAAF,KAIA,IAAAmD,EAAA7C,EAAAC,EAAA6C,QACAlD,KAAAF,IAAAqD,GAAA,iBAAAC,GACA,IAAAC,EAAA,gBACAA,GAAAD,EAAAE,OAAAC,WACAC,QAAAC,IAAAJ,GACAJ,EAAAS,UAAAN,EAAAE,QACAK,WAAAN,QC5IAO,GADiBC,OAFjB,WAA0B,IAAaC,EAAb9D,KAAa+D,eAAkD,OAA/D/D,KAAuCgE,MAAAC,IAAAH,GAAwB,OAAiBI,aAAaC,OAAA,SAAAC,MAAA,OAAAC,OAAA,QAAiDC,OAAQC,GAAA,UAE/JC,oBCCjB,IAcAC,EAdAC,EAAA,OAcAC,CACAhF,EACAiE,GATA,EAVA,SAAAgB,GACAF,EAAA,SAaA,kBAEA,MAUAG,EAAA,QAAAJ,EAAA","file":"static/js/20.2d86891afb24dc26ea96.js","sourcesContent":["<template>\n  <div id=\"map\" style=\"margin:0 auto;width: 100%;height: 100%\"></div>\n</template>\n\n<script>\n    import {chinaProvider} from 'leaflet.chinatmsproviders'\n    import L from 'leaflet'\n    export default {\n      name: 'Leaflet',\n      data () {\n        return {\n          map: null\n        }\n      },\n      mounted () {\n        this.initmap()\n      },\n      methods: {\n        initmap: function () {\n          /**\n           * Esri地图\n           */\n          let Esri_WorldImagery = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\n            attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, ' +\n              'AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n          })\n\n          let Esri_DarkGreyCanvas = L.tileLayer(\n            'http://{s}.sm.mapstack.stamen.com/' +\n            '(toner-lite,$fff[difference],$fff[@23],$fff[hsl-saturation@20])/' +\n            '{z}/{x}/{y}.png',\n            {\n              attribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, ' +\n                'NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community'\n            }\n          )\n          /**\n           * 智图地图内容\n           */\n          let normalm1 = L.tileLayer.chinaProvider('Geoq.Normal.Map', {\n            attribution: 'Haut-Gis-Org © 智图地图'\n          })\n          let normalm2 = L.tileLayer.chinaProvider('Geoq.Normal.Color', {\n            attribution: 'Haut-Gis-Org © 智图地图'\n          })\n          let normalm3 = L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue', {\n            attribution: 'Haut-Gis-Org © 智图地图'\n          })\n          let normalm4 = L.tileLayer.chinaProvider('Geoq.Normal.Gray', {\n            attribution: 'Haut-Gis-Org © 智图地图'\n          })\n          let normalm5 = L.tileLayer.chinaProvider('Geoq.Normal.Warm', {\n            attribution: 'Haut-Gis-Org © 智图地图'\n          })\n          let normalm6 = L.tileLayer.chinaProvider('Geoq.Normal.Cold', {\n            attribution: 'Haut-Gis-Org © 智图地图'\n          })\n          /**\n           * 天地图内容\n           */\n          let normalm = L.tileLayer.chinaProvider('TianDiTu.Normal.Map', {\n            attribution: 'Haut-Gis-Org © 天地图'\n          })\n          let normala = L.tileLayer.chinaProvider('TianDiTu.Normal.Annotion', {\n            attribution: 'Haut-Gis-Org © 天地图'\n          })\n          let imgm = L.tileLayer.chinaProvider('TianDiTu.Satellite.Map', {\n            attribution: 'Haut-Gis-Org © 天地图'\n          })\n          let imga = L.tileLayer.chinaProvider('TianDiTu.Satellite.Annotion', {\n            attribution: 'Haut-Gis-Org © 天地图'\n          })\n          let normal = L.layerGroup([normalm, normala])\n          let image = L.layerGroup([imgm, imga])\n          /**\n           * 谷歌\n           */\n          let normalMap = L.tileLayer.chinaProvider('Google.Normal.Map', {\n            attribution: 'Haut-Gis-Org © Google Map'\n          })\n          let satelliteMap = L.tileLayer.chinaProvider('Google.Satellite.Map', {\n            attribution: 'Haut-Gis-Org © Google Map'\n          })\n          /**\n           * 高德地图\n           */\n          let Gaode = L.tileLayer.chinaProvider('GaoDe.Normal.Map', {\n            attribution: 'Haut-Gis-Org © AMap'\n          })\n          let Gaodimgem = L.tileLayer.chinaProvider('GaoDe.Satellite.Map', {\n            attribution: 'Haut-Gis-Org © AMap'\n          })\n          let Gaodimga = L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion', {\n            attribution: 'Haut-Gis-Org © AMap'\n          })\n          let OpenStreetMap = L.tileLayer(\n            'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n              attribution: 'Haut-Gis-Org © OpenStreetMap'\n            }\n          )\n          let MapBox =\n            L.tileLayer(\n              'https://api.mapbox.com/styles/v1/kengqiangxia/cj5jbah540hlj2rpgh3xptiek/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1Ijoia2VuZ3FpYW5neGlhIiwiYSI6ImNqNWpiMWZ5ZTIxYzgyd3BrYTN2NDN5aXEifQ.bqY03lR_2LZ0fttPOJ4jyw', {\n                attribution: 'Haut-Gis-Org © <a href=\"http://mapbox.com\">Mapbox</a>'\n              })\n          let Gaodimage = L.layerGroup([Gaodimgem, Gaodimga])\n          let baseLayers = {\n            'Esri卫星图': Esri_WorldImagery,\n            'Esri-灰白': Esri_DarkGreyCanvas,\n            '智图地图': normalm1,\n            '智图午夜蓝': normalm3,\n            '智图灰色': normalm4,\n            '智图暖色': normalm5,\n            '天地图': normal,\n            '天地图影像': image,\n            '谷歌地图': normalMap,\n            '谷歌影像': satelliteMap,\n            '高德地图': Gaode,\n            '高德影像': Gaodimage,\n            'OpenStreetMap': OpenStreetMap,\n            'MapBox': MapBox\n          }\n          this.map = L.map('map', {\n            center: [43.912301, 125.323877],\n            zoom: 12,\n            layers: [normalm1],\n            zoomControl: false\n          })\n\n          L.control.layers(baseLayers, null).addTo(this.map)\n          L.control.zoom({\n            zoomInTitle: '放大',\n            zoomOutTitle: '缩小'\n          }).addTo(this.map)\n          // this.baseLayer.addTo(this.map)\n          // L.control.scale({ maxWidth: 200, metric: true, imperial: false }).addTo(this.map)\n          // use event\n          let mypop = L.popup()\n          this.map.on('click', function (e) {\n            let content = '你临幸了这个点：</br>'\n            content += e.latlng.toString()\n            console.log(content)\n            mypop.setLatLng(e.latlng)\n              .setContent(content)\n              // .openOn(this.map)\n              // .addTo(this.map)\n          })\n          // mypop.addTo(this.map)\n        }\n      }\n    }\n</script>\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/Leaflet.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"margin\":\"0 auto\",\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"id\":\"map\"}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-34614c8a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/Leaflet.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-34614c8a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Leaflet.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Leaflet.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Leaflet.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-34614c8a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Leaflet.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-34614c8a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Leaflet.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}